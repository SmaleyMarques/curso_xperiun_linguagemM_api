table 06_Closures
	lineageTag: ea2a85fa-9d6c-462b-b198-c5bd25d05c40

	column AnoMês
		dataType: double
		lineageTag: 01355478-9b5b-44c2-82cc-3c70281384f3
		summarizeBy: sum
		sourceColumn: AnoMês

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column Horas
		dataType: double
		lineageTag: 9e7e99e8-a229-4e9c-a694-dd7914f4844b
		summarizeBy: sum
		sourceColumn: Horas

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	partition 06_Closures = m
		mode: import
		queryGroup: 'Outros Conceitos'
		source = ```
				let
				    /* closures = capacidade da função each de guardar valores de variáveis de escopo onde foi criado */ 
				
				    Tabela_A = #table(
				                    type table[
				                            Data = date,
				                            Dia = number,
				                            Mês = number,
				                            Ano = number,
				                            AnoMês = number
				                    ], #"03_Funções Lista"[TransformaValores]
				                ),
				    Tabela_B = Table.Distinct(Tabela_A[[AnoMês]]),
				    Exemplo_closures = Table.AddColumn(
				                                    Tabela_B,
				                                    "Horas",
				                                    (linha_tbB) => // each
				                                    Table.RowCount(
				                                        Table.SelectRows(
				                                            Tabela_A,
				                                            (linha_tbA) => // each
				                                            linha_tbA[AnoMês] = linha_tbB[AnoMês]
				                                        )
				                                    ) * 24,
				                                    type number
				                                )
				in
				    Exemplo_closures
				```

	annotation PBI_NavigationStepName = Navegação

	annotation PBI_ResultType = Table

